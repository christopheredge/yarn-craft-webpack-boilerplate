#!/usr/bin/env node
'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _meow = require('meow');

var _meow2 = _interopRequireDefault(_meow);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _resolveFrom = require('resolve-from');

var _resolveFrom2 = _interopRequireDefault(_resolveFrom);

var _standalone = require('./standalone');

var _standalone2 = _interopRequireDefault(_standalone);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cli = (0, _meow2.default)('\n    Usage\n        $ generate-robotstxt [options] <dest>\n    Options\n       --config  Path to a specific configuration file.\n\n', {
    alias: {
        /* eslint-disable id-length */
        h: 'help',
        v: 'version'
        /* eslint-enable id-length */
    },
    string: ['config']
});

var optionsBase = {};

if (cli.flags.config) {
    // Should check these possibilities:
    //   a. name of a node_module
    //   b. absolute path
    //   c. relative path relative to `process.cwd()`.
    // If none of the above work, we'll try a relative path starting
    // in `process.cwd()`.
    optionsBase.configFile = (0, _resolveFrom2.default)(process.cwd(), cli.flags.config) || _path2.default.join(process.cwd(), cli.flags.config);
}

if (cli.input.length === 0) {
    throw new Error('Require `dest` argument');
}

Promise.resolve().then(function () {
    return Object.assign({}, optionsBase);
}).then(function (options) {
    return (0, _standalone2.default)(options);
}).then(function (output) {
    var dest = cli.input.pop();

    return new Promise(function (resolve, reject) {
        _fs2.default.writeFile(dest, output, function (error) {
            if (error) {
                return reject(new Error(error));
            }

            return resolve(output);
        });
    });
}).catch(function (error) {
    console.log(error); // eslint-disable-line no-console
    process.exit(error.code || 1); // eslint-disable-line no-process-exit
});